html {
  line-height: 1.15 /* 1 */;
  -webkit-text-size-adjust: 100% /* 2 */;
}
body {
  margin: 0;
}
main {
  display: block;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
hr {
  -webkit-box-sizing: content-box /* 1 */;
          box-sizing: content-box /* 1 */;
  height: 0 /* 1 */;
  overflow: visible /* 2 */;
}
pre,
code,
kbd,
samp {
  font-family: monospace, monospace /* 1 */;
  font-size: 1em /* 2 */;
}
a {
  background-color: transparent;
}
abbr[title] {
  border-bottom: none /* 1 */;
  -webkit-text-decoration: underline /* 2 */;
          text-decoration: underline /* 2 */;
  -webkit-text-decoration: underline dotted /* 2 */;
          text-decoration: underline dotted /* 2 */;
}
b,
strong {
  font-weight: bolder;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
img {
  border-style: none;
}
button,
input,
optgroup,
select,
textarea {
  font-family: inherit /* 1 */;
  font-size: 100% /* 1 */;
  line-height: 1.15 /* 1 */;
  margin: 0 /* 2 */;
}
button,
input {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
fieldset {
  padding: 0.35em 0.75em 0.625em;
}
legend {
  -webkit-box-sizing: border-box /* 1 */;
          box-sizing: border-box /* 1 */;
  color: inherit /* 2 */;
  display: table /* 1 */;
  max-width: 100% /* 1 */;
  padding: 0 /* 3 */;
  white-space: normal /* 1 */;
}
progress {
  vertical-align: baseline;
}
textarea {
  overflow: auto;
}
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box /* 1 */;
          box-sizing: border-box /* 1 */;
  padding: 0 /* 2 */;
}
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
[type="search"] {
  -webkit-appearance: textfield /* 1 */;
  outline-offset: -2px /* 2 */;
}
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button /* 1 */;
  font: inherit /* 2 */;
}
details {
  display: block;
}
summary {
  display: list-item;
}
template {
  display: none;
}
[hidden] {
  display: none;
}
picture {
  display: inline-block;
  font-size: 0;
}
q::before,
q::after {
  content: '"';
}
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}
a:focus,
input:focus,
button:focus {
  outline: 0.1rem solid #5e9ed6;
}
a {
  color: inherit;
  text-decoration: none;
}
.visually-hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  overflow: hidden;
}
.container {
  max-width: 1180px;
  padding: 0 10px;
  margin: 0 auto;
}
@media (max-width: 1200px) {
  .container {
    max-width: 960px;
  }
}
@media (max-width: 992px) {
  .container {
    max-width: 720px;
  }
}
@media (max-width: 768px) {
  .container {
    max-width: 95%;
  }
}
@media (max-width: 576px) {
  .container {
    padding: 0 7.5px;
    width: 100%;
  }
}
html {
  font-size: 10px;
}
body {
  overflow-x: hidden;
  min-width: 320px;
  font-family: 'Roboto', sans-serif;
  font-size: 1.8rem;
}
body {
  background: -webkit-radial-gradient(#e66465, #9198e5);
  background: -o-radial-gradient(#e66465, #9198e5);
  background: radial-gradient(#e66465, #9198e5);
  font-family: "Comic Sans MS";
  color: #fff;
  text-align: center;
  -webkit-animation: jump 0.3s linear;
          animation: jump 0.3s linear;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}
header {
  text-align: left;
}
.text-after-logo {
  margin-left: 40px;
}
.logo {
  height: 80px;
  vertical-align: middle;
}
nav {
  text-align: center;
}
nav ul {
  list-style: none;
  padding: 0;
}
.img-half {
  width: 50%;
}
.img-reverse {
  -webkit-transform: scaleX(-1);
      -ms-transform: scaleX(-1);
          transform: scaleX(-1);
}
img {
  height: 400px;
}
@-webkit-keyframes jump {
  from {
    color: #000;
  }
  : {
    color: #008000;
  }
  50% {
    color: #ff0;
  }
  75% {
    color: #f00;
  }
  to {
    color: #fff;
  }
}
@keyframes jump {
  from {
    color: #000;
  }
  : {
    color: #008000;
  }
  50% {
    color: #ff0;
  }
  75% {
    color: #f00;
  }
  to {
    color: #fff;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
